
# Triggers on push to main and dev branches
on:
  push:
    branches:
      - main
      - dev

permissions:
  id-token: write
  contents: read

jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'dev' && 'dev' }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the app
      - name: Build the app
        run: npm run build

      # Set environment-specific variables
      - name: Set environment-specific variables
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "BUCKET_NAME=lkpc-bucket-hosting-prod" >> $GITHUB_ENV
            echo "ROLE_NAME=GithubActionRole-prod" >> $GITHUB_ENV
            echo "AWS_REGION=us-east-2" >> $GITHUB_ENV  # Set region for prod
          else
            echo "BUCKET_NAME=lkpc-bucket-hosting-dev" >> $GITHUB_ENV
            echo "ROLE_NAME=GithubActionRole-dev" >> $GITHUB_ENV
            echo "AWS_REGION=us-east-2" >> $GITHUB_ENV  # Set region for dev
          fi

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.PROFILE_ID}}:role/${{env.ROLE_NAME}}
          aws-region: ${{env.AWS_REGION}}  # Pass AWS_REGION from environment variables

      # Deploy to S3
      - name: Deploy to S3
        run: |
          aws s3 sync out/ s3://${{env.BUCKET_NAME}} --delete

      # Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{secrets.DISTRIBUTION_ID}} --paths "/*"
