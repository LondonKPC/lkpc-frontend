name: Deploy lkpc-frontend to S3

# Triggers on push to main and dev branches
on:
  push:
    branches:
      - dev

permissions:
  id-token: write
  contents: read

jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the app
      - name: Build the app
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::774305616028:role/GithubActionRole
          aws-region: us-east-2

      - name: Deploy to S3
        run: |
          aws cloudfront list-distributions --query 'DistributionList.Items[*].{ID:Id,DomainName:DomainName}' --output table
          aws s3 sync out/ s3://lkpc-hosting-dev --delete
          aws cloudfront create-invalidation --distribution-id "EYUKGCAC20DAQ" --paths "/*"
